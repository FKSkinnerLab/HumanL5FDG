proc turnclampoff() {
	Iclamp = 0
	ic_clamp.amp=Iclamp
}

proc turnclampon() {
	Iclamp= PARAM_ic_clamp_amp
	ic_clamp.amp=Iclamp
}

proc setclamp() {
	Iclamp= $1
	ic_clamp.amp=Iclamp
}

proc setclampdur() {
	PARAM_ic_clamp_dur= $1
	ic_clamp.dur = PARAM_ic_clamp_dur
}

proc block() {
	gIhbar_opt=0
	gSKv3_1bar_opt=0
	gK_Pstbar_opt=0
	gImbar_opt=0
	gSK_E2bar_opt=0
	gK_Tstbar_opt=0
	gCa_LVAstbar_opt=0
	gCa_HVAbar_opt=0
	gNa_Et2_opt=0
	gNaTa_t_soma_opt=0
	gNaTa_t_apical_opt=0
	reset()
}

proc unblock() {
	gIhbar_opt=PARAM_gIhbar
	gSKv3_1bar_opt=PARAM_gSKv3_1bar
	gK_Pstbar_opt=PARAM_gK_Pstbar
	gImbar_opt=PARAM_gImbar
	gSK_E2bar_opt=PARAM_gSK_E2bar
	gK_Tstbar_opt=PARAM_gK_Tstbar
	gCa_LVAstbar_opt=PARAM_gCa_LVAstbar
	gCa_HVAbar_opt=PARAM_gCa_HVAbar
	gNa_Et2_opt=PARAM_Nap_Et2
	gNaTa_t_soma_opt=PARAM_NaTa_t_soma
	gNaTa_t_apical_opt=PARAM_NaTa_t_apical
	reset()
}

proc block_Na() {
	gNa_Et2_opt=0
	gNaTa_t_soma_opt=0
	gNaTa_t_apical_opt=0
	reset()
}

proc block_Ca() {
	gCa_LVAstbar_opt=0
	gCa_HVAbar_opt=0
	reset()
}

proc block_K() {
	gSKv3_1bar_opt=0
	gK_Pstbar_opt=0
	gImbar_opt=0
	gSK_E2bar_opt=0
	gK_Tstbar_opt=0
	reset()
}

proc block_Ih() {
	gIhbar_opt=0
	//print(gIhbar_opt)
	reset()
}

proc half_Ih() {
	gIhbar_opt = 0.5*PARAM_gIhbar
	//print(gIhbar_opt)
	reset()
}

proc block_Im() {
	gImbar_opt=0
	//print(gImbar_opt)
	reset()
}

proc half_Im() {
	gImbar_opt=0.5*PARAM_gImbar
	//print(gImbar_opt)
	reset()
}

proc double_Ih() {
	gIhbar_opt = 2*PARAM_gIhbar
	//print(gIhbar_opt)
	reset()
	
}

proc double_Im() {
	gImbar_opt = 2*PARAM_gImbar
	//print(gImbar_opt)
	reset()
	
}




proc setizap() {
	tstop=$1+$2

	setclamp(0)
	access filament_100000042[0]
	Zap= new Izap(0.5)
	
	Zap.del=$1
	Zap.dur=$2
	Zap.f0=$3
	Zap.f1=$4
	Zap.amp=$5

	load_file("VoltageAndCurrentTrace_zap.ses")

}

proc recordizap() {
	setizap($1,$2,$3,$4,$5)	

	time= new Vector()
	voltage= new Vector()
	zapcurrent= new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))
	zapcurrent.record(&Zap.i)

	run()

	save_time= new File()
	save_voltage= new File()
	save_zapcurrent= new File()

	sprint(title_time, "ZapData_time_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)
	sprint(title_voltage, "ZapData_voltage_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)
	sprint(title_zapcurrent, "ZapData_zapcurrent_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)


	save_time.wopen(title_time)
	save_voltage.wopen(title_voltage)
	save_zapcurrent.wopen(title_zapcurrent)

	time.printf(save_time)
	voltage.printf(save_voltage)
	zapcurrent.printf(save_zapcurrent)

	save_time.close()
	save_voltage.close()
	save_zapcurrent.close()

	tstop=PARAM_tstop
}

proc noiserun() {
	cvode.active(0)
	dt= $2
	tstop=$3
	numstep=tstop/dt

	NoiseFile= new File()
	NoiseVector= new Vector(numstep)
	NoiseVector
	
	sprint(noiseinput, "%s.dat", $s1)
	NoiseFile.ropen(noiseinput)

	for i=1, numstep {
		NoiseVector.x[i-1]=$4+NoiseFile.scanvar()	
	}

	ic_clamp.del=0
	ic_clamp.dur=1e9
	NoiseVector.play(&ic_clamp.amp, dt)
		
	time= new Vector()
	voltage= new Vector()
	current= new Vector()
	pascur= new Vector()
	Ca_HVAcur = new Vector()
	Ca_LVAstcur = new Vector()
	Ihcur = new Vector()
	K_Pstcur = new Vector()
	K_Tstcur = new Vector()
	SK_E2cur = new Vector()
	SKv3_1cur = new Vector()
	NaTa_tcur = new Vector()
	Nap_Et2cur = new Vector()
	Imcur = new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))
	current.record(&ic_clamp.i)
	pascur.record(&filament_100000042[0].i_pas(0.5))
	Ca_HVAcur.record(&filament_100000042[0].ica_Ca_HVA(0.5))
	Ca_LVAstcur.record(&filament_100000042[0].ica_Ca_LVAst(0.5))
	Ihcur.record(&filament_100000042[0].ihcn_Ih(0.5))
	K_Pstcur.record(&filament_100000042[0].ik_K_Pst(0.5))
	K_Tstcur.record(&filament_100000042[0].ik_K_Tst(0.5))
	SK_E2cur.record(&filament_100000042[0].ik_SK_E2(0.5))
	SKv3_1cur.record(&filament_100000042[0].ik_SKv3_1(0.5))
	NaTa_tcur.record(&filament_100000042[0].ina_NaTa_t(0.5))
	Nap_Et2cur.record(&filament_100000042[0].ina_Nap_Et2(0.5))
	Imcur.record(&filament_100000042[210].ik_Im(0.5))


	run()

	save_time= new File()
	save_voltage= new File()
	save_current= new File()
	save_pascur = new File()
	save_Ca_HVAcur= new File()
	save_Ca_LVAstcur= new File()
	save_Ihcur= new File()
	save_K_Pstcur= new File()
	save_K_Tstcur= new File()
	save_SK_E2cur= new File()
	save_SKv3_1cur= new File()
	save_NaTa_tcur= new File()
	save_Nap_Et2cur= new File()
	save_Imcur= new File()


	sprint(title_time, "NoiseData_time_%s.csv", $s1)
	sprint(title_voltage, "NoiseData_voltage_%s.csv", $s1)
	sprint(title_current, "NoiseData_current_%s.csv", $s1)
	sprint(title_pascur, "CurrentTrace_pascur_%s.csv", $s1)
	sprint(title_Ca_HVAcur, "CurrentTrace_Ca_HVAcur_%s.csv", $s1)
	sprint(title_Ca_LVAstcur, "CurrentTrace_Ca_LVAstcur_%s.csv", $s1)
	sprint(title_Ihcur, "CurrentTrace_Ihcur_%s.csv", $s1)
	sprint(title_K_Pstcur, "CurrentTrace_K_Pstcur_%s.csv", $s1)
	sprint(title_K_Tstcur, "CurrentTrace_K_Tstcur_%s.csv", $s1)
	sprint(title_SK_E2cur, "CurrentTrace_SK_E2cur_%s.csv", $s1)
	sprint(title_SKv3_1cur, "CurrentTrace_SKv3_1cur_%s.csv", $s1)
	sprint(title_NaTa_tcur, "CurrentTrace_NaTa_tcur_%s.csv", $s1)
	sprint(title_Nap_Et2cur, "CurrentTrace_Nap_Et2cur_%s.csv", $s1)
	sprint(title_Imcur, "CurrentTrace_Imcur_%s.csv", $s1)


	save_time.wopen(title_time)
	save_voltage.wopen(title_voltage)
	save_current.wopen(title_current)
	save_pascur.wopen(title_pascur)
	save_Ca_HVAcur.wopen(title_Ca_HVAcur)
	save_Ca_LVAstcur.wopen(title_Ca_LVAstcur)
	save_Ihcur.wopen(title_Ihcur)
	save_K_Pstcur.wopen(title_K_Pstcur)
	save_K_Tstcur.wopen(title_K_Tstcur)
	save_SK_E2cur.wopen(title_SK_E2cur)
	save_SKv3_1cur.wopen(title_SKv3_1cur)
	save_NaTa_tcur.wopen(title_NaTa_tcur)
	save_Nap_Et2cur.wopen(title_Nap_Et2cur)
	save_Imcur.wopen(title_Imcur)


	time.printf(save_time)
	voltage.printf(save_voltage)
	current.printf(save_current)
	pascur.printf(save_pascur)
	Ca_HVAcur.printf(save_Ca_HVAcur)
	Ca_LVAstcur.printf(save_Ca_LVAstcur)
	Ihcur.printf(save_Ihcur)
	K_Pstcur.printf(save_K_Pstcur)
	K_Tstcur.printf(save_K_Tstcur)
	SK_E2cur.printf(save_SK_E2cur)
	SKv3_1cur.printf(save_SKv3_1cur)
	NaTa_tcur.printf(save_NaTa_tcur)
	Nap_Et2cur.printf(save_Nap_Et2cur)
	Imcur.printf(save_Imcur)


	save_time.close()
	save_voltage.close()
	save_current.close()
	save_pascur.close()
	save_Ca_HVAcur.close()
	save_Ca_LVAstcur.close()
	save_Ihcur.close()
	save_K_Pstcur.close()
	save_K_Tstcur.close()
	save_SK_E2cur.close()
	save_SKv3_1cur.close()
	save_NaTa_tcur.close()
	save_Nap_Et2cur.close()
	save_Imcur.close()


	cvode.active(1)
	tstop=PARAM_tstop
	NoiseVector.play_remove()
	ic_clamp.del = PARAM_ic_clamp_del
	ic_clamp.dur = PARAM_ic_clamp_dur
	ic_clamp.amp = Iclamp
}

proc multnoiseruns() {
	pw= new PWManager()
	while (pw.count()>2) {
		pw.close(pw.count()-1)
	}

	xopen("VoltageAndCurrentTrace_noise_full.ses")

	for j=1,5 {
		sprint(noiseinputmult, "%d_%s", j, $s1)
		print noiseinputmult
		noiserun(noiseinputmult,.01, 2500, 0.031) //switched the second parameter to 0.1 because it is faster to process the information than 0.01  
		print j
	}
}

proc setizap_supra() {
	tstop=$1+$2

	setclamp(0)
	access filament_100000042[0]
	Zap= new Izap(0.5)
	
	Zap.del=$1
	Zap.dur=$2
	Zap.f0=$3
	Zap.f1=$4
	Zap.amp=$5

	load_file("VoltageAndCurrentTrace_zap.ses")
}

proc recordizap_supra() {
	setizap_supra($1,$2,$3,$4,$5)	

	cvode.active(0)
	dt=.01
	numstep=tstop/dt


	time= new Vector()
	voltage= new Vector()
	zapcurrent= new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))
	zapcurrent.record(&Zap.i)

	run()

	save_time= new File()
	save_voltage= new File()
	save_zapcurrent= new File()

	sprint(title_time, "ZapData_time_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)
	sprint(title_voltage, "ZapData_voltage_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)
	sprint(title_zapcurrent, "ZapData_zapcurrent_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)


	save_time.wopen(title_time)
	save_voltage.wopen(title_voltage)
	save_zapcurrent.wopen(title_zapcurrent)

	time.printf(save_time)
	voltage.printf(save_voltage)
	zapcurrent.printf(save_zapcurrent)

	save_time.close()
	save_voltage.close()
	save_zapcurrent.close()

	cvode.active(1)
	tstop=PARAM_tstop
}

proc setizap_distal() {
	tstop=$1+$2

	setclamp(0)
	access filament_100000042[203]
	Zap= new Izap(0.5)
	
	Zap.del=$1
	Zap.dur=$2
	Zap.f0=$3
	Zap.f1=$4
	Zap.amp=$5

	load_file("VoltageAndCurrentTrace_zap.ses")
}

proc recordizap_distal() {
	setizap_distal($1,$2,$3,$4,$5)	

	time= new Vector()
	voltage= new Vector()
	zapcurrent= new Vector()
	Cacurrent= new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))  //this is actually [203]
	zapcurrent.record(&Zap.i)
	Cacurrent.record(&filament_100000042[0].i_pas(0.5))

	run()
	

	save_time= new File()
	save_voltage= new File()
	save_zapcurrent= new File()
	save_Cacurrent= new File()

	sprint(title_time, "ZapData_time_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)
	sprint(title_voltage, "ZapData_voltage_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)
	sprint(title_zapcurrent, "ZapData_zapcurrent_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)
	sprint(title_Cacurrent, "ZapData_Cacurrent_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur)

	save_time.wopen(title_time)
	save_voltage.wopen(title_voltage)
	save_zapcurrent.wopen(title_zapcurrent)
	save_Cacurrent.wopen(title_Cacurrent)

	time.printf(save_time)
	voltage.printf(save_voltage)
	zapcurrent.printf(save_zapcurrent)
	Cacurrent.printf(save_Cacurrent)

	save_time.close()
	save_voltage.close()
	save_zapcurrent.close()
	save_Cacurrent.close()

	tstop=PARAM_tstop
}

proc SwapToKole() {
	forsec Soma {
		insert Ih_mod
		gIhbar_Ih= 0
		gbar_Ih_mod= gIhbar_opt
	}
	
	forsec Apical {
		dist=distance(.5)
		insert Ih_mod
 		gbar_Ih_mod=gIhbar_opt*(-0.8696+2.0870*exp(3.6161*(dist/decay)))
		gIhbar_Ih= 0
	}
	
	forsec Basilar {
		insert Ih_mod
		gIhbar_Ih=0
		gbar_Ih_mod=gIhbar_opt
	}
}


proc ResetHChannel() {
	forsec Soma {
		gIhbar_Ih= gIhbar_opt
		gbar_Ih_mod= 0
	}
	
	forsec Apical {
		dist=distance(.5)
 		gbar_Ih_mod= 0
		gIhbar_Ih= gIhbar_opt*(-0.8696+2.0870*exp(3.6161*(dist/decay)))
	}
	
	forsec Basilar {
		gIhbar_Ih= gIhbar_opt
		gbar_Ih_mod=0
	}

}

proc changepassive() {
    	forall {
        	cm = $1
        	Ra = $2
        	g_pas = $3
        	e_pas = -$4
    	}
}

proc setizap_DC() {
	tstop=$1+$2

	setclamp($6)
	ic_clamp.del=0
	ic_clamp.dur=tstop

	access filament_100000042[0]
	Zap= new Izap(0.5)
	
	Zap.del=$1
	Zap.dur=$2
	Zap.f0=$3
	Zap.f1=$4
	Zap.amp=$5

	load_file("VoltageAndcurrentTrace_zap_laptop.ses")

}

proc recordizap_DC() {
	setizap_DC($1,$2,$3,$4,$5,$6)	

	time= new Vector()
	voltage= new Vector()
	zapcurrent= new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))
	zapcurrent.record(&Zap.i)

	run()

	save_time= new File()
	save_voltage= new File()
	save_zapcurrent= new File()

	sprint(title_time, "ZapData_time_%d_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur, ic_clamp.amp*100)
	sprint(title_voltage, "ZapData_voltage_%d_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur, ic_clamp.amp*100)
	sprint(title_zapcurrent, "ZapData_zapcurrent_%d_%d_%d_%d_%d.csv", Zap.f0, Zap.f1, Zap.amp*100, Zap.dur, ic_clamp.amp*100)


	save_time.wopen(title_time)
	save_voltage.wopen(title_voltage)
	save_zapcurrent.wopen(title_zapcurrent)

	time.printf(save_time)
	voltage.printf(save_voltage)
	zapcurrent.printf(save_zapcurrent)

	save_time.close()
	save_voltage.close()
	save_zapcurrent.close()

	tstop=PARAM_tstop
}


proc recordclamp_TTX() {
	tstop=4080.6
	block_Na()
	tstop=4080.6

	ic_clamp.del=$1
	ic_clamp.dur=$2
	ic_clamp.amp=$3

	time= new Vector()
	voltage= new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))

	run()

	save_time= new File()
	save_voltage= new File()

	sprint(title_time, "CurrentClampData_TTX_time_%d_%d_%d.csv", ic_clamp.del, ic_clamp.dur, ic_clamp.amp*100)
	sprint(title_voltage, "CurrentClampData_TTX_voltage_%d_%d_%d.csv", ic_clamp.del, ic_clamp.dur, ic_clamp.amp*100)

	save_time.wopen(title_time)
	save_voltage.wopen(title_voltage)

	time.printf(save_time)
	voltage.printf(save_voltage)

	save_time.close()
	save_voltage.close()

	tstop=PARAM_tstop
}

proc recordclamp() {
	tstop=4080.6
	unblock()
	tstop=4080.6

	ic_clamp.del=$1
	ic_clamp.dur=$2
	ic_clamp.amp=$3

	time= new Vector()
	voltage= new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))

	run()

	save_time= new File()
	save_voltage= new File()

	sprint(title_time, "CurrentClampData_time_%d_%d_%d.csv", ic_clamp.del, ic_clamp.dur, ic_clamp.amp*100)
	sprint(title_voltage, "CurrentClampData_voltage_%d_%d_%d.csv", ic_clamp.del, ic_clamp.dur, ic_clamp.amp*100)

	save_time.wopen(title_time)
	save_voltage.wopen(title_voltage)

	time.printf(save_time)
	voltage.printf(save_voltage)

	save_time.close()
	save_voltage.close()

	tstop=PARAM_tstop
}







proc reset() {
filament_100000042[0] distance()

    	forall {
        	insert pas
        	cm = cm_opt
        	Ra = Ra_opt
        	g_pas = g_pas_opt
        	e_pas = -e_pas_opt
    	}

	forsec Soma {
		insert Ca_LVAst 
	  	insert Ca_HVA 
		insert SKv3_1
		insert K_Pst
		insert K_Tst
		insert SK_E2
		insert CaDynamics_E2
		insert Im
		gImbar_Im= 0

		insert Ih

		insert Nap_Et2 
	  	insert NaTa_t


  		gCa_LVAstbar_Ca_LVAst = gCa_LVAstbar_opt 
  		gCa_HVAbar_Ca_HVA = gCa_HVAbar_opt
		decay_CaDynamics_E2= 460.0
		gamma_CaDynamics_E2= 0.000501
		gSKv3_1bar_SKv3_1= gSKv3_1bar_opt
		gK_Pstbar_K_Pst= gK_Pstbar_opt
		gK_Tstbar_K_Tst= gK_Tstbar_opt
		gSK_E2bar_SK_E2= gSK_E2bar_opt
		// gImbar_Im= gImbar_opt
		gIhbar_Ih= gIhbar_opt

		gNap_Et2bar_Nap_Et2= gNa_Et2_opt
		gNaTa_tbar_NaTa_t= gNaTa_t_soma_opt

		cm=1
	}

	forsec Apical { 
	insert Ca_LVAst 
	  	insert Ca_HVA 
		insert SKv3_1
		insert K_Pst
		insert K_Tst
		gK_Pstbar_K_Pst= 0
		gK_Tstbar_K_Tst= 0

		insert SK_E2
		insert CaDynamics_E2
		insert Im
		insert Ih

  		insert NaTa_t 

		insert Nap_Et2 
		gNap_Et2bar_Nap_Et2= 0


		decay_CaDynamics_E2= 460.0
		gamma_CaDynamics_E2= 0.000501
		gSKv3_1bar_SKv3_1= gSKv3_1bar_opt
		// gK_Pstbar_K_Pst= gK_Pstbar_opt
		gSK_E2bar_SK_E2= gSK_E2bar_opt
		gImbar_Im= gImbar_opt
		
		// gIhbar_Ih= gIhbar_opt
		dist=distance(.5)
		// gIhbar_Ih=gIhbar_opt*exp(-1*dist/decay)
		gIhbar_Ih=gIhbar_opt*(-0.8696+2.0870*exp(3.6161*(dist/decay)))

  		// gCa_LVAstbar_Ca_LVAst = gCa_LVAstbar_opt 
  		// gCa_HVAbar_Ca_HVA = gCa_HVAbar_opt
		//if (dist>685 && dist<885) {
		if (dist>360 && dist<600) {
  			gCa_LVAstbar_Ca_LVAst = 100*gCa_LVAstbar_opt 
  			gCa_HVAbar_Ca_HVA = 10*gCa_HVAbar_opt
		} else{
			gCa_LVAstbar_Ca_LVAst = gCa_LVAstbar_opt 
  			gCa_HVAbar_Ca_HVA = gCa_HVAbar_opt
		}

		gNaTa_tbar_NaTa_t=gNaTa_t_apical_opt
	}

	forsec Basilar {
		insert Ca_LVAst 
	  	insert Ca_HVA 
		insert SKv3_1
		insert K_Pst
		insert K_Tst

		insert SK_E2
		insert CaDynamics_E2
		insert Im
		gImbar_Im= 0

		insert Ih

  		insert NaTa_t 

		insert Nap_Et2 

  		gCa_LVAstbar_Ca_LVAst = 0 
  		gCa_HVAbar_Ca_HVA = 0
		decay_CaDynamics_E2= 460.0
		gamma_CaDynamics_E2= 0.000501
		gSKv3_1bar_SKv3_1= 0
		gK_Pstbar_K_Pst= 0
		gK_Tstbar_K_Tst= 0
		gSK_E2bar_SK_E2= 0
		// gImbar_Im= gImbar_opt

		gIhbar_Ih= gIhbar_opt

		gNap_Et2bar_Nap_Et2= 0
		gNaTa_tbar_NaTa_t= 0
	}

	/* 
	forsec Axonal {
		insert SKv3_1
		insert K_Pst
		insert SK_E2
		insert CaDynamics_E2
		insert Im
		insert Ih

		decay_CaDynamics_E2= 460.0
		gamma_CaDynamics_E2= 0.000501
		gSKv3_1bar_SKv3_1= gSKv3_1bar_opt
		gK_Pstbar_K_Pst= gK_Pstbar_opt
		gSK_E2bar_SK_E2= gSK_E2bar_opt
		gImbar_Im= gImbar_opt
		gIhbar_Ih= gIhbar_opt
	} 
	*/


proc noiserunchange() {
	cvode.active(0)
	dt= $2
	tstop=$3
	numstep=tstop/dt

	NoiseFile= new File()
	NoiseVector= new Vector(numstep)
	NoiseVector
	
	sprint(noiseinput, "%s.dat", $s1)
	NoiseFile.ropen(noiseinput)

	for i=1, numstep {
		NoiseVector.x[i-1]=$4+NoiseFile.scanvar()	
	}

	ic_clamp.del=0
	ic_clamp.dur=1e9
	NoiseVector.play(&ic_clamp.amp, dt)
		
	time= new Vector()
	voltage= new Vector()
	current= new Vector()

	time.record(&t)
	voltage.record(&filament_100000042[0].v(0.5))
	current.record(&ic_clamp.i)

	run()

	//save_time= new File()
	//save_voltage= new File()
	//save_current= new File()

	//sprint(title_time, "NoiseData_time_%s.csv", $s1)
	//sprint(title_voltage, "NoiseData_voltage_%s.csv", $s1)
	//sprint(title_current, "NoiseData_current_%s.csv", $s1)

	//save_time.wopen(title_time)
	//save_voltage.wopen(title_voltage)
	//save_current.wopen(title_current)

	//time.printf(save_time)
	//voltage.printf(save_voltage)
	//current.printf(save_current)

	//save_time.close()
	//save_voltage.close()
	//save_current.close()


	cvode.active(1)
	tstop=PARAM_tstop
	NoiseVector.play_remove()
	ic_clamp.del = PARAM_ic_clamp_del
	ic_clamp.dur = PARAM_ic_clamp_dur
	ic_clamp.amp = Iclamp
}

